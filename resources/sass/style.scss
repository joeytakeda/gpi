/*!
  This style sheet was generated from a SASS stylesheet. Don't edit this
  stylesheet directly, edit and compile the SASS instead.

  Try something like this:

  sass --watch resources/sass:resources/css
*/


/******************************************** NAMESPACES */

@use 'sass:map';

/******************************************** IMPORTS */

@import "_variables.scss";
@import "_fonts.scss";
@import "_mixins.scss";
@import "_toggle.scss";
@import "../lib/css-hamburgers/_sass/hamburgers/hamburgers.scss";



/******************************************** MAIN STRUCTURE */

html {
    position: relative;
    min-height: 100%;
    font-size: 16px;
}

body{
    font-family: "EB Garamond";
    display:grid;
    grid-template-areas:
    "nav"
    "main"
    "footer";
    min-height:100vh;
    color: $gpi-black;
    font-size:18px;
     overflow-x:hidden;
}
/******************************************** NAV */

nav.navbar{
    grid-area: nav;
    position:fixed;
    height:$nav-height;
    font-family: "Roboto";
    font-weight:300;
    font-size: map.get($typescale, 5);
    background: $gpi-grey;
    display:flex;
    justify-content:center;
    ul.nav > li{
        text-align:center;
        width:8rem;
    }
}

nav.navbar::before,
nav.navbar::after{
    content:unset;
}

nav.navbar .logo{
    padding: 0 2rem;
    font-family: "EB Garamond";
    font-size: map.get($typescale, 2);
    font-weight: bold;
    margin-top: -0.31rem; 
}

nav.navbar ul{
    display:flex;
    list-style:none;
    flex: 0 1 60rem;
    align-items:bottom;
    height:100%;
    justify-content:space-between;
}

nav.navbar li{
    display:flex;
    flex-direction:row;
    flex-wrap:wrap;
    width:100%;
    border-bottom:.2rem solid transparent;
     transition: border-bottom-color 0.25s ease-in-out;
    &:not(.logo):hover{
        border-bottom-color: $bc;
        transition: border-bottom-color 0.25s ease-in-out;
    }
 
}


nav.navbar a{
    color:inherit;
    width:100%;
    display:block;
    align-self:center;
    text-align:center;
    text-decoration:none;

    &:hover,:active,:visited{
        text-decoration:none;
    }


}

.dropdown-menu{
    font-size:1rem;
    position:static;
    flex-direction:wrap;
    flex-wrap:nowrap;
    padding-top:0;
    padding-bottom:0;
    li:not(:last-child){
        border-bottom: 1px solid rgba($gpi-black, 0.2);
    }
    li > a{
        padding: map.get($typescale, 6);
    }
}

.open > .dropdown-menu{}


/******************************************** MAIN */
main{
    grid-area: main;
    margin-top: $nav-height;
    position:relative;
    min-height:100vh;
    display:flex;
    flex:0 1 60rem;
    align-items:baseline;
    .poem-container{
        display:flex;
    }
    .container{
        display:flex;
        flex-direction:row;
        flex-wrap:wrap;
        flex: 0 1 60rem;
        margin:0 auto;
        padding-left: $poem-left-margin;

        align-items: baseline;
    }
}

.object-title .page-header{
   border-bottom:none;
}



/******************************************** ASIDE */

aside{
    flex: 0 0 15rem;
    background: $gpi-grey;
    position:sticky;
    overflow-y:auto;
    order:0;
    will-change:transform;
    scroll-behavior: smooth;
    height:calc(100vh - #{$nav-height});
    padding: map.get($typescale, 10) 0;
    top: $nav-height;
    margin-right: map.get($typescale, 1);
     transition: transform 0.5s ease;
    font-family: "Roboto";
    h1, h2, h3, h4, h5, h6{
        font-weight: 300;
    }
    
    h4{
        font-size: map.get($typescale, 6);
    }
    
    .aside-heading{
        display:flex;
        justify-content: space-around;
    }
    .aside-heading, h2, h3{
        font-size: map.get($typescale, 5);
    }

}



/******************************************** FOOTER */


footer{
    grid-area:footer;
    height:20rem;
    background: $gpi-black;
}



/*********************************************** HEADINGS */

/* Quick SASS formula for creating heading scale */
@for $i from 1 to 6{
    h#{$i}{
        font-size: map.get($typescale, $i);
    }
}


h1{
    margin-bottom: map.get($typescale, 1);
    .poem &{
       margin-right:map.get($typescale, 1);
    }
  
}


/*********************************************** NAV */

nav .hamburger{
    display:none;
}

/*********************************************** Bootstrap OVERRIDE */


.row{
    width:100%;
    min-height: 0;
}

#content nav{
    width:100%;
}

.breadcrumb{
    
    background-color:white;
}



/*********************************************** OBJECTS */


.object{
    .record-link, .references, h1{
        display:none;
     }
    
}

aside .object{
    
    h1{
        display:block;
        font-size: map.get($typescale, 5);
        margin-bottom:map.get($typescale, 10);
    }
    
    h2 {
        font-size:map.get($typescale, 6);
    }
}


/*********************************************** POEM DISPLAY */

.poem-container{
    margin-right:1rem;
}


.poem {
    counter-reset: line-counter;
    flex: 0 1 $poem-width;
    will-change:transform;
    order:1;
    transition: transform $shift-left-time ease;
    transform: translateX(0);
/*    display:flex;
    flex-direction:row;
    flex-wrap:wrap;*/
    margin-bottom: 5 * map.get($typescale, 1);
    margin-top: map.get($typescale, 4);
    margin-left: $poem-left-margin;
    blockquote {
        font-size: 16px;
        margin: map.get($typescale, 4) map.get($typescale, 1);
        max-width:25rem;
        p{
            margin:0;
        }
        cite{
            margin-left: map.get($typescale, 1);
            display:block;
            font-style:italic;
        }
        footer {
            font-size: inherit;
        }
        border:none;
    }

    ol {
        list-style-type: none;
        padding-left: 0;
        margin-left:2rem;
        & + ol{
            margin-top: map.get($typescale, 5);
        }
    }

    li {
        counter-increment: line-counter;
        margin-left:0;
        padding-left:.1.5rem;
        text-indent:-1.5rem;
       & + li{
           margin-top: map.get($typescale, 13);
       }
    }

    li::before {
        content: counter(line-counter) '.';
        color: rgba($gpi-black, 0.5);
        padding-right: $lc_offset;
        text-align: right;
        display: inline-block;
    }
    
}



/******************* POEM LINKS */
.poem a{
    text-decoration:none;
    color: inherit;
    border-bottom: 0.1rem solid rgba(#008080, 0.6);
    background: linear-gradient(
    0deg, 
    $bc 0%,
    $bc $initHeight * 1%,
    $transparent $initHeight * 1%,
    $transparent 100%);
    &:hover, &:visited, &:active{
         color:inherit;
        text-decoration:none;  
    }
    &.selected, &.clicked{
       background: linear-gradient(
        0deg,
        $bc 0%,
        $bc 100%
        );
    animation: background-up $backgroundTime linear;
    }
    &.deselected{
      animation: background-down $backgroundTime linear;  
    }
}






/****************** POEM ASIDE */

aside button.hamburger{
    display:none;
}

.js aside button.hamburger{
    display:block;
    margin-left: 10px;
}

.aside-hidden .poem{
    transform: translateX($shift-left-width);
    margin-right: $shift-left-width;
}

aside > div,
aside > .aside-heading > h2{
    opacity: 1;
    transition: opacity $shift-left-time ease;
}

aside[aria-expanded='false']{
    transform: translateX($shift-left-width);
    overflow-y:hidden;
}


aside[aria-expanded='false'] > div:not(.aside-heading),
aside[aria-expanded='false'] > .aside-heading > h2{
    opacity:0.1;
}




aside > div {
    padding: map.get($typescale, 8);
    &:not(:first-of-type){
        border-top: map.get($typescale, 16) solid rgba($gpi-black, 0.4);
    }
}

aside .object{
    font-size: map.get($typescale, 6);
    .references, .record-link{
        display:block;
    }
    p{
        font-weight: 300;
        margin-top: map.get($typescale, 6);
    }
    
    
}


/********************************************** INDICES */

table.poem-index td:first-of-type{
    
    max-width: 20rem;
    
}




// -----------------------------------------------------
// transformation errors
.tx-error {
    background-color: $error_bg;
    outline: $error_outline;
    display: inline-block;
    padding: $error_padding;

    .node-name {
        font-weight: bold;
        display: inline-block;
        padding: $error_padding;
    }
}

// -----------------------------------------------------
// Search results

span.hi {
    font-weight: bold;
    color: darkred;
}



span.target {
    color: $gender_u_fg;
    cursor: pointer;
}

.referenced {
    font-weight: bolder;
}



p.signed {
    margin-left: 4em;
}

/******************************************************** TOGGLE SWITCH */

.object-header{
    display:flex;
    flex-wrap:wrap;
    justify-content:space-between;
    align-items:baseline;
    margin-bottom: map.get($typescale, 8);
}


.toggles{
    display:none;
    button{
            top: -1rem;
    }
}



.js aside .toggles{
    display:block;
}

.objectCloser{
    display:none;
}


/************************************* MEDIA Q */



    body:before{
        content:"";
        display:block;
        position:fixed;
        top:0;
        height:100vh;
        width:100vw;
        z-index:0;
        background-color:transparent;
        transition:background-color 0.2s ease-in-out;
    }


@media (max-width: 768px){

      body.gpi-modal:before{
        z-index:100;
        background-color:rgba($gpi-grey,0.9);
        backdrop-filter: blur(4px);
        transition:background-color 0.2s ease-in-out,
                   backdrop-filter 0.2s ease-in-out;
      }
    

#aside{
    transform: translateX(-15rem);
    display:flex;
    position:fixed;
    height:120vh;
    z-index:9000;
    top: -1 * $nav-height;
    transition:background-color 0.2s ease-in-out;
}


.poem{
    transform: translateX(0)!important;
    margin-right:.5rem!important;
    transition:none!important;
    line-height:1.6;
    margin-left:1.5rem;
}

.modal-on{
    overflow-y:hidden;
}
#aside *{
    opacity: 1!important;
}

#aside.gpi-modal{
    transform:translateX(0);
    min-width:100vw;
    background-color: rgba($gpi-black, 0.3);
    transition:background-color 0.2s ease-in-out;
    align-content:center;
    justify-content:center;
    transition:none;
}

#aside > *{
    display:none;
    
}

#aside.gpi-modal .object.active{
    display:block;
    border-top:none;
    min-width:20rem;
    max-width:35rem;
    align-self:center;
    justify-self:center;
    position:relative;
    top:-2rem;
    padding:map.get($typescale, 6) map.get($typescale,5);
    background-color: white;
    border-radius:.1rem;
    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);
}
.refToggle{
    display:none!important;
}
.objectCloser{
    display:block;
    background:none;
    border:none;
}

.objectCloser:hover  *{
    stroke: $bc;
}




.poem-container{
    margin: 0 auto;
    justify-content:center;
}

/* MOBILE NAV */

nav.navbar{
    align-items:center;
    justify-content:space-between;
    overflow-y:visible;
    
    
    ul{
       flex: 0 0 8rem;
       justify-content:flex-end;
       flex-direction:row;
       flex-wrap:wrap;
       margin-top:.5rem;
       height:100%;

    }
   &[aria-open='true']{
     
    ul > li:not(.logo){
        transform: translateX(0);
        transition: opacity 0.35s ease-in-out;
        opacity:1;
        
    }
       
   } 
   ul > li{
       &.logo {
           justify-content:flex-end;
       }
       &:not(.logo){
           order:1;
           position:relative;
           transform: translateX(20rem);
           background: $gpi-grey;
           width:8rem;
           height:4rem;
           opacity:0;
       }
   }
   
   
   
/*    ul > li{
        & a{
            width:unset;
        }
       &.logo{
         justify-content:flex-end;
       }
       position:relative;
       left:0;
       &:not(.logo){
        margin-top:0;
        order:1;
        
            &:hover{
            border-bottom-color: transparent;
            }
       
        
     }
     
    }*/


    
   .hamburger{
      display:block;
      margin-right:3rem;
      align-self:flex-start;
      margin-top:-.2rem;
    }
    
}
}
//15 seems to be about the right param
@include animateBorderBottom(15)