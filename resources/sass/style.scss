/*!
  This style sheet was generated from a SASS stylesheet. Don't edit this
  stylesheet directly, edit and compile the SASS instead.

  Try something like this:

  sass --watch resources/sass:resources/css
*/


/******************************************** NAMESPACES */

@use 'sass:map';

/******************************************** IMPORTS */

@import "_variables.scss";
@import "_fonts.scss";
@import "_mixins.scss";
@import "../lib/css-hamburgers/_sass/hamburgers/hamburgers.scss";



/******************************************** MAIN STRUCTURE */

html {
    position: relative;
    min-height: 100%;
    font-size: 16px;
}

body{
    font-family: "EB Garamond";
    display:grid;
    grid-template-areas:
    "nav"
    "main"
    "footer";
    min-height:100vh;
    color: $gpi-black;
     font-size: 16px;
     overflow-x:hidden;
}


nav.navbar{
    grid-area: nav;
    position:fixed;
    height: $nav-height;
    font-family: "Roboto";
    background: $gpi-grey;
}

main{
    grid-area: main;
    margin-top: $nav-height;
    position:relative;
    .poem-container{
        display:flex;
    }
    max-width: 70rem;
}





aside{
    flex: 0 0 15rem;
    background: $gpi-grey;
    position:sticky;
    overflow-y:auto;
    order:0;
    height:calc(100vh - #{$nav-height});
    padding: map.get($typescale, 10) 0;
    top: $nav-height;
 
     transition: transform 0.5s ease;
    font-family: "Roboto";
    h1, h2, h3, h4, h5, h6{
        font-weight: 300;
    }
    
    h4{
        font-size: map.get($typescale, 6);
    }
    
    .aside-heading{
        display:flex;
        justify-content: space-around;
    }
    .aside-heading, h2, h3{
        font-size: map.get($typescale, 5);
    }

}




aside, .poem{
   transform: translateX(0);

}


aside > button{
    display:block;
    position:absolute;
    top:10px;
    right:10px;
    z-index:9000;
    opacity: 0.7;
}

.poem{
    transition: transform $shift-left-time ease;
}

.aside-hidden .poem{
    transform: translateX($shift-left-width);
    margin-right: $shift-left-width;
}

aside > div,
aside > .aside-heading > h2{
    opacity: 1;
    transition: opacity $shift-left-time ease;
}

aside[aria-expanded='false']{
    transform: translateX($shift-left-width);
    overflow-y:hidden;
}


aside[aria-expanded='false'] > div:not(.aside-heading),
aside[aria-expanded='false'] > .aside-heading > h2{
    opacity:0.1;
}




aside > div {
    padding: map.get($typescale, 8);
    &:not(:first-of-type){
        border-top: map.get($typescale, 16) solid rgba($gpi-black, 0.4);
    }
}


footer::before{
    content:"";
    height:4rem;
    display:block;
}

footer{
    grid-area:footer;
    height:20rem;
    background: green;
}



/*********************************************** HEADINGS */

/* Quick SASS formula for creating heading scale */
@for $i from 1 to 6{
    h#{$i}{
        font-size: map.get($typescale, $i);
    }
}


h1{
    margin-bottom: map.get($typescale, 1);
}

// -----------------------------------------------------
// Poem display
.poem {
    counter-reset: line-counter;
    max-width: 50rem;
    font-size:18px;
        order:1;
    margin-bottom: 5 * map.get($typescale, 1);
    margin-top: map.get($typescale, 4);
    margin-left: map.get($typescale, 1);
    blockquote {
        font-size: 16px;
        margin: map.get($typescale, 4) map.get($typescale, 1);
        max-width:25rem;
        p{
            margin:0;
        }
        cite{
            margin-left: map.get($typescale, 1);
            display:block;
            font-style:italic;
        }
        footer {
            font-size: inherit;
        }
        border:none;
    }

    ol {
        list-style-type: none;
        padding-left: 0;
        margin-left:0;
        & + ol{
            margin-top: map.get($typescale, 5);
        }
    }

    li {
        counter-increment: line-counter;
        margin-left:0;
        padding-left:0;
       & + li{
           margin-top: map.get($typescale, 13);
       }
    }

    li::before {
        content: counter(line-counter) '.';
        color: rgba($gpi-black, 0.5);
        padding-right: $lc_offset;
        text-align: right;
        display: inline-block;
    }
    
}



.poem a{
    text-decoration:none;
    color: inherit;
    border-bottom: 0.1rem solid rgba(#008080, 0.6);
    background: linear-gradient(
    0deg, 
    $bc 0%,
    $bc $initHeight * 1%,
    $transparent $initHeight * 1%,
    $transparent 100%);
}

.poem a:hover,
.poem a:visited,
.poem a:active{
    color:inherit;
    text-decoration:none;
}

.poem a.selected,
.poem a.clicked{
    background: linear-gradient(
        0deg,
        $bc 0%,
        $bc 100%
    );
    animation: background-up $backgroundTime linear;
    
}

.poem a.deselected{
    animation: background-down $backgroundTime linear;
}



// -----------------------------------------------------
// transformation errors
.tx-error {
    background-color: $error_bg;
    outline: $error_outline;
    display: inline-block;
    padding: $error_padding;

    .node-name {
        font-weight: bold;
        display: inline-block;
        padding: $error_padding;
    }
}

// -----------------------------------------------------
// Search results

span.hi {
    font-weight: bold;
    color: darkred;
}



span.target {
    color: $gender_u_fg;
    cursor: pointer;
}

.referenced {
    font-weight: bolder;
}



p.signed {
    margin-left: 4em;
}

// -----------------------------------------------------
// reference display
ul.references {
    padding-left: 1em;
    li {
        font-style: italic;
    }
}

//15 seems to be about the right param
@include animateBorderBottom(15)